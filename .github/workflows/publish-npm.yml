name: Publish to NPM

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version to publish'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        package:
          - name: "brave-real-browser-mcp-server"
            path: "."
          - name: "mcp-server-tests"
            path: "tests/mcp-testing"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies for ${{ matrix.package.name }}
        working-directory: ${{ matrix.package.path }}
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi

      - name: Build main package (if needed)
        if: matrix.package.name == 'brave-real-browser-mcp-server'
        working-directory: ${{ matrix.package.path }}
        run: npm run build

      - name: Update package version (if workflow_dispatch)
        if: github.event_name == 'workflow_dispatch' && matrix.package.name == 'brave-real-browser-mcp-server'
        working-directory: ${{ matrix.package.path }}
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Get package version
        working-directory: ${{ matrix.package.path }}
        run: |
          echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Check if package version exists on NPM
        working-directory: ${{ matrix.package.path }}
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          if npm view $PACKAGE_NAME@${{ env.PACKAGE_VERSION }} version 2>/dev/null; then
            echo "Version ${{ env.PACKAGE_VERSION }} already exists on NPM"
            echo "SKIP_PUBLISH=true" >> $GITHUB_ENV
          else
            echo "Version ${{ env.PACKAGE_VERSION }} does not exist on NPM, proceeding with publish"
            echo "SKIP_PUBLISH=false" >> $GITHUB_ENV
          fi

      - name: Publish ${{ matrix.package.name }} to NPM
        if: env.SKIP_PUBLISH == 'false'
        working-directory: ${{ matrix.package.path }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag for main package
        if: github.event_name == 'workflow_dispatch' && matrix.package.name == 'brave-real-browser-mcp-server' && env.SKIP_PUBLISH == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ env.PACKAGE_VERSION }}" -m "Release version ${{ env.PACKAGE_VERSION }}"
          git push origin "v${{ env.PACKAGE_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create GitHub Release
        if: matrix.package.name == 'brave-real-browser-mcp-server' && env.SKIP_PUBLISH == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          release_name: Release v${{ env.PACKAGE_VERSION }}
          body: |
            ## Changes in v${{ env.PACKAGE_VERSION }}
            
            ### Package: ${{ matrix.package.name }}
            - Published to NPM
            - Version: ${{ env.PACKAGE_VERSION }}
            
            ### Installation
            ```bash
            npm install ${{ matrix.package.name }}
            ```
            
            ### Usage
            See [README.md](https://github.com/${{ github.repository }}/blob/main/README.md) for usage instructions.
          draft: false
          prerelease: false

  notify-success:
    runs-on: ubuntu-latest
    needs: publish
    if: success()
    steps:
      - name: Notification
        run: |
          echo "üéâ All packages have been successfully published to NPM!"
          echo "üì¶ Packages published:"
          echo "  - brave-real-browser-mcp-server"
          echo "  - mcp-server-tests"

  notify-failure:
    runs-on: ubuntu-latest
    needs: publish
    if: failure()
    steps:
      - name: Notification
        run: |
          echo "‚ùå Package publication failed!"
          echo "Please check the workflow logs for details."